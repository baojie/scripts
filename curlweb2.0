#!/usr/bin/env phantomjs
var system = require('system');
var webpage = require('webpage');
var fs = require('fs');

var url = system.args[1];

function stdout(s) {
  fs.write("/dev/stdout", s, "w");
}

var page = webpage.create();
page.viewportSize = { width: 800, height: 600 };

function screenshot(dimensions) {
  // save screenshot, too
  var filename = url.replace(/^https?/, '').replace(/\//g, '-').replace(/\W/g, '') + '.png';
  if (dimensions)
    page.viewportSize = dimensions;
  console.error('Saving to: ' + filename);
  page.render(filename);
}

function end(dimensions) {
  // write page html to stdout
  console.log(page.content);

  //screenshot(dimensions);

  // we're done, so we don't hang here
  phantom.exit();
}

function scrollDown() {
  // returns the dimensions of the page
  return page.evaluate(function() {
    // scroll to the bottom
    var dims = {width: document.width, height: document.height};
    document.body.scrollTop = dims.height;
    return dims;
  });
}

//console.error('Opening url: ' + url);
page.open(url, function(status) {
  if (status != 'success') {
    console.error('Unable to load the address!');
  }

  var wait = 1500;
  var dims_old = {width: 0, height: 0};
  // scrollDown every <wait> milliseconds until we don't increase the dims.height
  function next() {
    // measure the dimensions of the page
    var dims_new = scrollDown();
    var height_change = dims_new.height - dims_old.height;
    if (height_change === 0) {
      end(dims_new);
    }
    else {
      //console.error('Dimensions: ' + dims_new.width + 'x' + dims_new.height + ' waiting ' + wait + 'ms to reload.');
      //console.error('  change: ' + height_change);
      dims_old = dims_new;
      setTimeout(next, wait);
    }
  }

  next();
});
